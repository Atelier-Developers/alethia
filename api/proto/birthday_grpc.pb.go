// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BirthdayUpdaterClient is the client API for BirthdayUpdater service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BirthdayUpdaterClient interface {
	UpdateInfos(ctx context.Context, in *BirthdayUpdateRequest, opts ...grpc.CallOption) (*BirthdayUpdateResponse, error)
}

type birthdayUpdaterClient struct {
	cc grpc.ClientConnInterface
}

func NewBirthdayUpdaterClient(cc grpc.ClientConnInterface) BirthdayUpdaterClient {
	return &birthdayUpdaterClient{cc}
}

func (c *birthdayUpdaterClient) UpdateInfos(ctx context.Context, in *BirthdayUpdateRequest, opts ...grpc.CallOption) (*BirthdayUpdateResponse, error) {
	out := new(BirthdayUpdateResponse)
	err := c.cc.Invoke(ctx, "/helloworld.BirthdayUpdater/UpdateInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BirthdayUpdaterServer is the server API for BirthdayUpdater service.
// All implementations must embed UnimplementedBirthdayUpdaterServer
// for forward compatibility
type BirthdayUpdaterServer interface {
	UpdateInfos(context.Context, *BirthdayUpdateRequest) (*BirthdayUpdateResponse, error)
	mustEmbedUnimplementedBirthdayUpdaterServer()
}

// UnimplementedBirthdayUpdaterServer must be embedded to have forward compatible implementations.
type UnimplementedBirthdayUpdaterServer struct {
}

func (UnimplementedBirthdayUpdaterServer) UpdateInfos(context.Context, *BirthdayUpdateRequest) (*BirthdayUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInfos not implemented")
}
func (UnimplementedBirthdayUpdaterServer) mustEmbedUnimplementedBirthdayUpdaterServer() {}

// UnsafeBirthdayUpdaterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BirthdayUpdaterServer will
// result in compilation errors.
type UnsafeBirthdayUpdaterServer interface {
	mustEmbedUnimplementedBirthdayUpdaterServer()
}

func RegisterBirthdayUpdaterServer(s grpc.ServiceRegistrar, srv BirthdayUpdaterServer) {
	s.RegisterService(&BirthdayUpdater_ServiceDesc, srv)
}

func _BirthdayUpdater_UpdateInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BirthdayUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BirthdayUpdaterServer).UpdateInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.BirthdayUpdater/UpdateInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BirthdayUpdaterServer).UpdateInfos(ctx, req.(*BirthdayUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BirthdayUpdater_ServiceDesc is the grpc.ServiceDesc for BirthdayUpdater service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BirthdayUpdater_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.BirthdayUpdater",
	HandlerType: (*BirthdayUpdaterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateInfos",
			Handler:    _BirthdayUpdater_UpdateInfos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/birthday.proto",
}
